# Configuration file
# key = value

# ------------------
# My Environment config
# ------------------

# A sample of a custom configuration variable for my application
config.version=1.1.0

# ------------------
# Swagger
# ------------------
quarkus.swagger-ui.always-include=true

# ------------------
# Http config
# ------------------
quarkus.http.port=8081
# While Quarkus will listen on port 8080 by default, when running tests it defaults to 8081, in parallel manner. 
quarkus.http.test=8082
quarkus.swagger-ui.always-include=true
## [Development] environment  - Dev profile 
%dev.it.sample.services.employee.rest.client.DepartmentRestClient/mp-rest/url=http://localhost:8083
%dev.it.sample.services.employee.rest.client.OrganizationRestClient/mp-rest/url=http://localhost:8085

## [Kubernetes] environment  - Prod profile
it.sample.services.employee.rest.client.DepartmentRestClient/mp-rest/url=http://department-service:8083
it.sample.services.employee.rest.client.OrganizationRestClient/mp-rest/url=http://organization-service:8085

# Enable cors
quarkus.http.cors=true
# Form attributes will be added to the request parameters
quarkus.http.body.merge-form-attributes=true
# For Time taken to process the request, in millis %D to work
quarkus.http.record-request-start-time=true

# ------------------
# Logging config
# ------------------
quarkus.log.file.enable=true
quarkus.log.file.path=employee-service.log
quarkus.log.file.level=INFO
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%X{MYTID}][%X{traceId}][%X{spanId}] [%c{3.}] (%t) %s%e%n
# Set 1 categories
quarkus.log.category."it.sample.services.employee".level=INFO
# Set another log fles
quarkus.log.handler.file."SqlFileLog".enable=true
quarkus.log.handler.file."SqlFileLog".path=hibernate-sql.log
quarkus.log.handler.file."SqlFileLog".rotation.max-file-size=500M
quarkus.log.handler.file."SqlFileLog".rotation.max-backup-index=200
quarkus.log.handler.file."SqlFileLog".rotation.file-suffix=yyyy-MM-dd-hh-mm
quarkus.log.handler.file."SqlFileLog".rotation.rotate-on-boot=false
quarkus.log.category."org.hibernate.SQL".use-parent-handlers=false
quarkus.log.category."org.hibernate.SQL".level=DEBUG
quarkus.log.category."org.hibernate.SQL".handlers=SqlFileLog
# Console log
quarkus.log.console.enable=true
quarkus.log.console.level=DEBUG
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%X{MYTID}][%X{traceId}][%X{spanId}] [%c{3.}] (%t) %s%e%n
# Hibernate log
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.bind-param=true
# HTTP access log
quarkus.http.access-log.enabled=true
quarkus.http.access-log.pattern=%t "%r" %s %b %q %u %D %a %A %p %v "%{i,Referer}" "%{i,User-Agent}" 
quarkus.http.access-log.log-to-file=true
quarkus.http.access-log.base-file-name=http-access
quarkus.http.access-log.log-suffix=.log
quarkus.http.access-log.rotate=true

# ---------------------------------
# Storage (Datasource config)
# ---------------------------------

# Persistent Storage VS In-memory Storage
sample.storage.type = persistent
#sample.storage.type = inmem

# [Development] environment
%dev.quarkus.datasource.db-kind=mysql
%dev.quarkus.datasource.jdbc.url = jdbc:mysql://mysql:3306/employeedb?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
%dev.quarkus.datasource.username = employeeuser
%dev.quarkus.datasource.password = password
%dev.quarkus.datasource.driver = com.mysql.cj.jdbc.Driver
%dev.quarkus.hibernate-orm.dialect = org.hibernate.dialect.MySQL8Dialect
%dev.quarkus.datasource.health.enabled = false

# ------------------
# Kubernetes
# ------------------

# Kubernetes PostgreSQL database config
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${POSTGRES_USER}
quarkus.datasource.password=${POSTGRES_PASSWORD}
quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.sql-load-script = import-k8s.sql

# Quarkus Kubernetes extension we may customize the behavior of the generated manifest yaml:
quarkus.kubernetes.replicas=1
quarkus.kubernetes.labels.app-type=demo
quarkus.kubernetes.annotations.app-type=demo
quarkus.kubernetes.env.secrets=postgres-secret
quarkus.kubernetes.env.configmaps=postgres-config
quarkus.kubernetes.env-vars.my-env-var.configmap=employee-config

# Following property is the same as my login ID to docker.io registry site
quarkus.container-image.group=antoniopaolacci


# ------------------------
# OAuth2 - Keycloak
# ------------------------

quarkus.oauth2.client-id=quarkus
quarkus.oauth2.client-secret=ec920554-11df-4524-87f1-46db53712371
quarkus.oauth2.introspection-url=http://localhost:8080/auth/realms/master/protocol/openid-connect/token/introspect
quarkus.oauth2.role-claim=roles
